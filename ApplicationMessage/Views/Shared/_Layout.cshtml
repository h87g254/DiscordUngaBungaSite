@{
    Layout = null;
    if (User.Identity.IsAuthenticated)
    {
        var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);
        var _context = Context.RequestServices.GetService(typeof(ApplicationMessage.Data.ApplicationDbContext)) as ApplicationMessage.Data.ApplicationDbContext;
        var currentUser = _context?.Users.FirstOrDefault(u => u.Id == userId);
        ViewBag.CurrentUserProfilePicture = currentUser?.ProfilePicturePath;
    }
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ApplicationMessage</title>
    <link rel="stylesheet" href="/css/site.css" />
</head>
<body>
    <button id="sidebarToggle" class="mobile-toggle">☰</button>

    <div class="layout-wrapper">

        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-profile">
                <a href="/Account/Profile">
                    <img src="@(ViewBag.CurrentUserProfilePicture ?? "/profile_pictures/default.png")" class="sidebar-avatar" />
                </a>
                @* <span class="sidebar-username">@User.Identity?.Name</span> *@
            </div>

            @if (User.Identity.IsAuthenticated)
            {
                <nav class="sidebar-nav">
                    <a href="/Home/Friends" class="sidebar-link">👥 Friends</a>
                    @await Component.InvokeAsync("RecentChats")
                    <a href="/Home/Pending" class="sidebar-link">📥 Pending</a>
                    <a href="/Rooms" class="sidebar-link">💬 Groups</a>
                </nav>

                <form method="post" action="/Account/Logout" class="sidebar-logout">
                    <button type="submit">🚪 Logout</button>
                </form>
            }

        </aside>

        <!-- Main content -->
        <main class="main-content">
            @RenderBody()
        </main>
    </div>

    @RenderSection("Scripts", required: false)
    <script>
        const toggleButton = document.getElementById('sidebarToggle');
        const sidebar = document.querySelector('.sidebar');

        toggleButton?.addEventListener('click', () => {
            sidebar?.classList.toggle('visible');
        });

        // Optional: hide sidebar when clicking a sidebar link (mobile only)
        document.querySelectorAll('.sidebar-link').forEach(link => {
            link.addEventListener('click', () => {
                if (window.innerWidth <= 768) {
                    sidebar?.classList.remove('visible');
                }
            });
        });
    </script>

</body>
</html>
