@model List<ApplicationMessage.Models.Message>

@{
    ViewData["Title"] = "Chat";
}

<div class="container">
    <div class="card" style="max-width: 900px; margin: 0 auto; padding: 0; display: flex; flex-direction: column; height: 80vh;">

        <!-- Chat Header -->
        <div style="padding: 1rem 2rem; border-bottom: 1px solid #dee2e6; display: flex; align-items: center; justify-content: space-between;">
            <h2 style="margin: 0; font-size: 1.5rem;">Chat Room</h2>
            <a href="/Home/Index" class="button-link">← Back</a>
        </div>

        <!-- Messages Scrollable Area -->
        <div id="messages" style="flex: 1; overflow-y: auto; padding: 1.5rem 2rem; background: #f1f3f5;">
            @await Html.PartialAsync("_MessagesPartial", Model)
        </div>

        <!-- Input Bar -->
        <form method="post" asp-action="SendMessage" style="display: flex; align-items: center; padding: 1rem 2rem; gap: 0.75rem; border-top: 1px solid #dee2e6; background: #fff;">
            <input type="hidden" name="receiverId" value="@ViewBag.ChatUserId" />

            <input id="messageInput" type="text" name="content" placeholder="Type your message..." required
                   style="flex: 1; min-width: 0; padding: 0.75rem 1rem; font-size: 1rem; border-radius: 8px; border: 1px solid #ced4da; color: #212529; background: white;" />

            <button id="sendButton" type="submit" style="padding: 0.6rem 1.2rem; width: auto; font-size: 1rem; background-color: #5865f2; color: #ffffff; border: none; border-radius: 8px; white-space: nowrap;">
                Send
            </button>
        </form>

    </div>
</div>

@section Scripts {
    <script>
        function scrollMessagesToBottom() {
            const messagesDiv = document.getElementById('messages');
            if (messagesDiv) {
                messagesDiv.scrollTop = messagesDiv.scrollHeight;
            }
        }

        async function refreshMessages() {
            const userId = @ViewBag.ChatUserId;
            const response = await fetch('/Messages/GetMessages?userId=' + userId);
            const html = await response.text();
            document.getElementById('messages').innerHTML = html;
            scrollMessagesToBottom();
        }

        setInterval(refreshMessages, 5000);
        window.onload = scrollMessagesToBottom;
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        connection.on("ReceivePrivateMessage", async (user, message) => {
            const response = await fetch('/Messages/GetMessages?userId=' + @ViewBag.ChatUserId);
            const html = await response.text();
            document.getElementById("messages").innerHTML = html;
            document.getElementById("messages").scrollTop = document.getElementById("messages").scrollHeight;
        });

        connection.start().catch(err => console.error(err));

        document.getElementById("sendButton").addEventListener("click", async function (e) {
            e.preventDefault();
            const content = document.getElementById("messageInput").value;
            const receiverId = @ViewBag.ChatUserId;

            if (!content.trim()) return;

            await fetch('/Messages/SendMessage', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `receiverId=${receiverId}&content=${encodeURIComponent(content)}`
            });

            document.getElementById("messageInput").value = "";
        });
    </script>

}
